/* Generated By:JJTree: Do not edit this line. SimpleNode.java */


namespace Edu.Stanford.Nlp.Trees.Tregex.Tsurgeon
{
	internal class SimpleNode : INode
	{
		protected internal INode parent;

		protected internal INode[] children;

		protected internal int id;

		protected internal TsurgeonParser parser;

		public SimpleNode(int i)
		{
			id = i;
		}

		public SimpleNode(TsurgeonParser p, int i)
			: this(i)
		{
			parser = p;
		}

		public virtual void JjtOpen()
		{
		}

		public virtual void JjtClose()
		{
		}

		public virtual void JjtSetParent(INode n)
		{
			parent = n;
		}

		public virtual INode JjtGetParent()
		{
			return parent;
		}

		public virtual void JjtAddChild(INode n, int i)
		{
			if (children == null)
			{
				children = new INode[i + 1];
			}
			else
			{
				if (i >= children.Length)
				{
					INode[] c = new INode[i + 1];
					System.Array.Copy(children, 0, c, 0, children.Length);
					children = c;
				}
			}
			children[i] = n;
		}

		public virtual INode JjtGetChild(int i)
		{
			return children[i];
		}

		public virtual int JjtGetNumChildren()
		{
			return (children == null) ? 0 : children.Length;
		}

		/* You can override these two methods in subclasses of SimpleNode to
		customize the way the node appears when the tree is dumped.  If
		your output uses more than one line you should override
		toString(String), otherwise overriding toString() is probably all
		you need to do. */
		public override string ToString()
		{
			return TsurgeonParserTreeConstantsConstants.jjtNodeName[id];
		}

		public virtual string ToString(string prefix)
		{
			return prefix + ToString();
		}

		/* Override this method if you want to customize how the node dumps
		out its children. */
		public virtual void Dump(string prefix)
		{
			System.Console.Out.WriteLine(ToString(prefix));
			if (children != null)
			{
				foreach (INode aChildren in children)
				{
					Edu.Stanford.Nlp.Trees.Tregex.Tsurgeon.SimpleNode n = (Edu.Stanford.Nlp.Trees.Tregex.Tsurgeon.SimpleNode)aChildren;
					if (n != null)
					{
						n.Dump(prefix + " ");
					}
				}
			}
		}
	}
}
